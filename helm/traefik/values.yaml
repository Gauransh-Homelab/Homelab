# Traefik Helm Chart Values - NPM Replacement
# Provides: Auto SSL via Let's Encrypt, Web Dashboard, Multiple DNS Providers

# High Availability Deployment
deployment:
  kind: Deployment
  replicas: 2  # HA setup - one pod can fail without service interruption

# Entry Points - Where Traefik listens for traffic
ports:
  web:
    port: 8000      # Internal container port
    expose:
      default: true
    exposedPort: 80 # External HTTP port
    redirections:
      entryPoint:
        to: websecure
        scheme: https
        permanent: true
  websecure:
    port: 8443      # Internal container port  
    expose:
      default: true
    exposedPort: 443 # External HTTPS port
    tls:
      enabled: false  # Let IngressRoutes handle TLS termination

# MetalLB LoadBalancer Service - Gets external IP like arr-stack services
service:
  type: LoadBalancer
  externalTrafficPolicy: Local  # Preserves real client IP addresses (important for logs/security)
  loadBalancerIP: "192.168.10.11"  # Request specific IP from MetalLB pool

# Certificate management now handled by cert-manager
# Use ClusterIssuers: letsencrypt-cloudflare or letsencrypt-duckdns
# Add cert-manager annotations to IngressRoute resources for automatic certificates

# No persistent storage needed - cert-manager handles certificates as Kubernetes secrets
# persistence:
#   enabled: false

# Dashboard Configuration - Web interface like NPM
dashboard:
  enabled: true
# We'll create a secure IngressRoute separately for dashboard access

# DNS credentials now used by cert-manager ClusterIssuers
# No environment variables needed in Traefik
# env: []

# Logging Configuration
logs:
  general:
    level: DEBUG  # Change to DEBUG for troubleshooting
  access:
    enabled: true  # Access logs for monitoring

# Prometheus Metrics - Optional monitoring integration
metrics:
  prometheus:
    enabled: true
    # If you have Prometheus Operator, this will auto-discover

# Resource Limits - Appropriate for homelab environment
resources:
  requests:
    cpu: "100m"
    memory: "50Mi"
  limits:
    cpu: "750m"     # Generous for SSL processing
    memory: "250Mi"

# Security: Disable unnecessary endpoints
ping:
  enabled: false    # Disable public ping endpoint

# Additional Arguments - Basic configuration for cert-manager integration
additionalArguments:
  # Enable more detailed logs
  - "--log.level=INFO"
  # Cert-manager handles all certificate operations
  # Allow cross-namespace service references
  - "--providers.kubernetescrd.allowCrossNamespace=true"
  # Allow ExternalName services
  - "--providers.kubernetescrd.allowExternalNameServices=true"