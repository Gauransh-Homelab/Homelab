replicaCount: 1

image:
  repository: jellyfin/jellyfin
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 8096
  targetPort: 8096

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: jellyfin.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Environment variables
env:
  TZ: "Etc/UTC"

# Persistence configuration
# IMPORTANT: All PVCs must be pre-created before installing this chart.
# This chart will not create PVCs and requires you to specify existingClaim for each enabled volume.
persistence:
  config:
    enabled: true
    # REQUIRED: Name of the existing PVC to use for config data
    existingClaim: ""
    mountPath: /config
  
  cache:
    enabled: true
    # REQUIRED: Name of the existing PVC to use for cache data
    existingClaim: ""
    mountPath: /cache
  
  data:
    enabled: true
    # REQUIRED: Name of the existing PVC to use for application data
    existingClaim: ""
    mountPath: /data
  
  logs:
    enabled: true
    # REQUIRED: Name of the existing PVC to use for logs
    existingClaim: ""
    mountPath: /logs

# Note: Media volumes should be managed separately by the user.
# Example of adding a media volume in your custom values.yaml:
#
# extraVolumes:
#   - name: my-media
#     persistentVolumeClaim:
#       claimName: my-existing-media-pvc
# 
# extraVolumeMounts:
#   - name: my-media
#     mountPath: /media

# Extra volumes and mounts for user-defined storage like media
extraVolumes: []
extraVolumeMounts: []

# Init container to verify required directories exist
initContainers:
  checkRequiredDirectories:
    enabled: true
    image: busybox:1.36.1
    command: ["/bin/sh", "-c"]
    args:
      - |
        echo "Checking required Jellyfin directories..."
        missing=0
        for dir in "/config" "/cache" "/data" "/logs"; do
          if [ ! -d "$dir" ]; then
            echo "ERROR: Required directory $dir does not exist"
            missing=1
          else
            echo "âœ“ Directory $dir exists"
          fi
        done
        if [ $missing -ne 0 ]; then
          echo "FATAL: Some required directories are missing. Cannot start Jellyfin."
          exit 1
        fi
        echo "All required directories are present. Proceeding with startup."

resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
